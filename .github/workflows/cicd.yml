name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  WORKING_DIRECTORY: ./src

jobs:
  check-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
    - uses: actions/checkout@v2
    - uses: extractions/setup-just@v1

    - name: Configure AWS Credentials
      run: | 
        export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY }}"
        export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_KEY }}"
        export AWS_REGION="eu-west-1"

    - name: Setup config file
      run: | 
        sudo mkdir ~/.aws
        sudo touch ~/.aws/config
        echo "[suppdev]" | sudo tee ~/.aws/config
        echo "aws_access_key_id=${{secrets.AWS_ACCESS_KEY}}" | sudo tee -a ~/.aws/config
        echo "aws_secret_access_key=${{secrets.AWS_SECRET_KEY}}" | sudo tee -a ~/.aws/config

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        # terraform_version: 0.13.0
        cli_config_credentials_token: ${{ secrets.TF_API_KEY }}
        
    - name: Terraform Init
      id: init
      run: terraform init

    - name: Lint
      id: lint
      if: github.event_name == 'pull_request'
      run: just lint

    - name: Build backend
      id: build-backend
      if: github.event_name == 'pull_request'
      run: |
        just build-backend profiles
      
    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color
      continue-on-error: true
      
    - uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          <details><summary>Show Plan</summary>
          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`
          </details>
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
          
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve
